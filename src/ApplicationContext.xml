<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx.xsd
            http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--配置通知-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="select*" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <!--配置切入点-->
    <aop:config proxy-target-class="true">
        <aop:pointcut id="pointcut" expression="execution(* com.snaillemon.s2sm.service.impl.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>
    </aop:config>

    <!--数据源配置-->
    <!--<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/db_employee"/>
        <property name="username" value="root"/>
        <property name="password" value="root"/>
    </bean>-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/db_employee"/>
        <property name="user" value="root"/>
        <property name="password" value="root"/>
        <!--连接池中保留的最小连接数。 -->
        <property name="minPoolSize" value="5" />

        <!--连接池中保留的最大连接数。Default: 15 -->
        <property name="maxPoolSize" value="30" />

        <!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
        <property name="initialPoolSize" value="10" />

        <!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
        <property name="maxIdleTime" value="60" />

        <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
        <property name="acquireIncrement" value="5" />

        <!--JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预 缓存的statements 属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素
            。 如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。 Default: 0 -->
        <property name="maxStatements" value="0" />

        <!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
        <property name="idleConnectionTestPeriod" value="60" />

        <!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
        <property name="acquireRetryAttempts" value="30" />

        <!--获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源 仍有效 保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试
            获取连接失败后该数据源将申明已断开并永久关闭。Default: false -->
        <property name="breakAfterAcquireFailure" value="true" />
    </bean>

    <!--事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--加载mybatis配置文件-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis_config.xml"/>
    </bean>

    <!--扫描mybatis接口-->
    <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.snaillemon.s2sm.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>-->

    <!--dao层-->
    <bean id="empDao" class="com.snaillemon.s2sm.dao.impl.EmpDaoImpl">
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>

    <!--业务层-->
    <bean id="empServiceImpl" class="com.snaillemon.s2sm.service.impl.EmpServiceImpl">

        <property name="dao" ref="empDao"/>

    </bean>

    <!--action-->
    <bean id="empAction" class="com.snaillemon.s2sm.action.EmpAction">
        <property name="service" ref="empServiceImpl"/>
    </bean>
</beans>